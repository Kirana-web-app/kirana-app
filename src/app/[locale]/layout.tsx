import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { routing } from "@/src/i18n/routing";
import Navbar from "@/src/components/UI/Navbar";
import NavbarLayout from "@/src/components/layout/NavbarLayout";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
};

export default async function RootLayout({ children, params }: Props) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  // Load messages for the current locale
  const messages = await getMessages();

  //  const pathname = usePathname();
  //   const l = useTranslations("locale");

  //   const hideNavbar =
  //     OMIT_NAVBAR_ROUTES.some((route) => pathname.includes(route)) ||
  //     pathname === `/${l("locale")}`;

  return (
    <html lang={locale} className="h-full" data-locale={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full`}
      >
        <NextIntlClientProvider messages={messages}>
          <NavbarLayout>{children}</NavbarLayout>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
